{"meta":{"title":"Epsilon","subtitle":null,"description":null,"author":"bitGroup","url":"http://yoursite.com"},"posts":[{"title":"一些MOOC证书","slug":"一些MOOC证书","date":"2019-02-13T05:40:00.000Z","updated":"2019-02-13T05:49:48.000Z","comments":true,"path":"2019/02/13/一些MOOC证书/","link":"","permalink":"http://yoursite.com/2019/02/13/一些MOOC证书/","excerpt":"","text":"如下是2014年之今在Cousera和edX上获得的一些MOOC证书, 主要涉及深度学习, 机器学习, 数据科学, Python, R和Spark等相关课程. 2016年在edX上完成过Data Science and Engineering with Spark的三门课程, 但都没有认证. Cousera 2018年09月, Feature Engineering 2018年08月, Exploring and Preparing your Data with BigQuery 2018年08月, How Google does Machine Learning 2018年08月, Intro to TensorFlow 2018年08月, Launching into Machine Learning 2017年12月, Neural Networks and Deep Learning 2017年12月, Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization 2017年12月, Structuring Machine Learning Projects 2017年12月, Convolutional Neural Networks 2015年06月, R Programming 2015年01月, The Data Scientist’s Toolbox 2014年01月, Machine Learning edX 2014年12月, 6.00.2x: Introduction to Computational Thinking and Data Science 2014年01月, 6.00.1x: Introduction to Computer Science and Programming Using Python","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"R方判断模型精度?","slug":"R方判断模型精度","date":"2017-12-23T12:03:00.000Z","updated":"2018-01-01T05:09:35.000Z","comments":true,"path":"2017/12/23/R方判断模型精度/","link":"","permalink":"http://yoursite.com/2017/12/23/R方判断模型精度/","excerpt":"","text":"前段时间看一篇描述$R^2$评估模型拟合的好坏的文章. 刚好一个同事也在使用$R^2$评估一个模型, 而且他没有留意残差图, 我提醒他在使用$R^2$时需要留意一下残差图, 但是他并不是太理解. 我觉得最好给他演示一下, 由于文章中使用的是Minitab, 我在这篇文章中使用用python复现了相应的结果, 具体代码可以参考nbviewer.","raw":null,"content":null,"categories":[],"tags":[{"name":"统计","slug":"统计","permalink":"http://yoursite.com/tags/统计/"},{"name":"回归分析","slug":"回归分析","permalink":"http://yoursite.com/tags/回归分析/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"ant的简单配置","slug":"ant的简单配置","date":"2017-05-13T11:02:00.000Z","updated":"2019-09-29T14:04:14.472Z","comments":true,"path":"2017/05/13/ant的简单配置/","link":"","permalink":"http://yoursite.com/2017/05/13/ant的简单配置/","excerpt":"在进行java开发时, 通常使用Maven来进行java项目构建. 但是在没有网络的环境下, 使用Maven就比较麻烦. 本文主要描述使用Ant进行java项目的构建, 包含编译, 打包, 测试三个部分. 其中测试部分使用junit4框架, 如果使用testng框架, 可以参考其官网testngtasks进行配置. 文件的目录结构如下:$ ls projectDirbuild.xml src/ lib/其中, src的目录结构可以进一步参考如下build.xml文件中的描述, lib文件夹主要存放依赖库之类的, 如junit的文件是放在这个文件夹里, 在运行ant时记得加上-lib选项, 如:$ ant test -lib lib如下是build.xml的文件内容:","text":"在进行java开发时, 通常使用Maven来进行java项目构建. 但是在没有网络的环境下, 使用Maven就比较麻烦. 本文主要描述使用Ant进行java项目的构建, 包含编译, 打包, 测试三个部分. 其中测试部分使用junit4框架, 如果使用testng框架, 可以参考其官网testngtasks进行配置. 文件的目录结构如下:$ ls projectDirbuild.xml src/ lib/其中, src的目录结构可以进一步参考如下build.xml文件中的描述, lib文件夹主要存放依赖库之类的, 如junit的文件是放在这个文件夹里, 在运行ant时记得加上-lib选项, 如:$ ant test -lib lib如下是build.xml的文件内容: build.xml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;?xml version=\"1.0\"?&gt;&lt;project name=\"my-job\" basedir=\".\" default=\"jar\"&gt; &lt;property name=\"src.dir\" value=\"src\"/&gt; &lt;!--源代码存放路径--&gt; &lt;property name=\"src.main\" value=\"$&#123;src.dir&#125;/main\" /&gt; &lt;!--测试代码存放路径--&gt; &lt;property name=\"src.test\" value=\"$&#123;src.dir&#125;/test\" /&gt; &lt;!--依赖包路径--&gt; &lt;property name=\"lib.dir\" value=\"lib\"/&gt; &lt;property name=\"build.dir\" value=\"build\"/&gt; &lt;!--主要编译文件存放路径--&gt; &lt;property name=\"build.dir.classes\" value=\"$&#123;build.dir&#125;/classes\"/&gt; &lt;!--测试编译文件存放路径--&gt; &lt;property name=\"build.dir.test\" value=\"$&#123;build.dir&#125;/test\"/&gt; &lt;path id=\"ext-lib\"&gt; &lt;fileset dir=\"$&#123;lib.dir&#125;\"&gt; &lt;include name=\"**/*.jar\"/&gt; &lt;/fileset&gt; &lt;!--编译测试文件需要使用--&gt; &lt;dirset dir=\"$&#123;build.dir.classes&#125;\"/&gt; &lt;/path&gt; &lt;target name=\"init\" description=\"Init environment\"&gt; &lt;mkdir dir=\"$&#123;build.dir&#125;\"/&gt; &lt;mkdir dir=\"$&#123;build.dir.classes&#125;\"/&gt; &lt;mkdir dir=\"$&#123;build.dir.test&#125;\"/&gt; &lt;/target&gt; &lt;target name=\"clean\" description=\"Delete all generated files\"&gt; &lt;delete&gt; &lt;fileset dir=\"$&#123;build.dir&#125;\"&gt; &lt;include name=\"**\"/&gt; &lt;/fileset&gt; &lt;fileset dir=\"$&#123;build.dir.test&#125;\"&gt; &lt;include name=\"**\"/&gt; &lt;/fileset&gt; &lt;dirset dir=\"$&#123;build.dir.classes&#125;\"/&gt; &lt;dirset dir=\"$&#123;build.dir.test&#125;\"/&gt; &lt;dirset dir=\"$&#123;build.dir&#125;\"/&gt; &lt;/delete&gt; &lt;/target&gt; &lt;target name=\"compile\" description=\"Compiles the Task\" depends=\"clean,init\"&gt; &lt;javac srcdir=\"$&#123;src.main&#125;\" destdir=\"$&#123;build.dir.classes&#125;\" includeAntRuntime=\"false\" verbose=\"true\"&gt; &lt;classpath refid=\"ext-lib\"/&gt; &lt;/javac&gt; &lt;/target&gt; &lt;target name=\"testcompile\" description=\"Compiles JUnit Test\" depends=\"compile\"&gt; &lt;javac srcdir=\"$&#123;src.test&#125;\" destdir=\"$&#123;build.dir.test&#125;\" includeAntRuntime=\"false\" verbose=\"true\"&gt; &lt;classpath refid=\"ext-lib\" /&gt; &lt;/javac&gt; &lt;/target&gt; &lt;target name=\"test\" description=\"JUnit Test\"&gt; &lt;junit&gt; &lt;classpath&gt; &lt;path refid=\"ext-lib\"/&gt; &lt;dirset dir=\"$&#123;build.dir.test&#125;\"/&gt; &lt;/classpath&gt; &lt;formatter type=\"brief\" usefile=\"false\"/&gt; &lt;test name=\"PersonTest\" /&gt; &lt;batchtest&gt; &lt;fileset dir=\"$&#123;build.dir.test&#125;\"&gt; &lt;include name=\"**/*Test.class\"/&gt; &lt;/fileset&gt; &lt;/batchtest&gt; &lt;/junit&gt; &lt;/target&gt; &lt;condition property=\"pkgName\" value=\"$&#123;package.name&#125;\" else=\"project\"&gt; &lt;isset property=\"package.name\" /&gt; &lt;/condition&gt; &lt;target name=\"jar\" description=\"JARs the Task\" depends=\"compile,testcompile\"&gt; &lt;jar destfile=\"$&#123;build.dir&#125;/$&#123;pkgName&#125;.jar\" basedir=\"$&#123;build.dir.classes&#125;\" excludes=\"$&#123;build.dir&#125;/test/**\"&gt; &lt;/jar&gt; &lt;/target&gt;&lt;/project&gt;","raw":null,"content":null,"categories":[],"tags":[{"name":"ant","slug":"ant","permalink":"http://yoursite.com/tags/ant/"},{"name":"配置","slug":"配置","permalink":"http://yoursite.com/tags/配置/"}]},{"title":"hadoop中yarn的一些配置","slug":"hadoop中yarn的一些配置","date":"2017-04-05T11:00:00.000Z","updated":"2019-09-29T14:02:36.312Z","comments":true,"path":"2017/04/05/hadoop中yarn的一些配置/","link":"","permalink":"http://yoursite.com/2017/04/05/hadoop中yarn的一些配置/","excerpt":"在Hadoop2中经常会出现Container is running beyond virtual memory limits的错误, 详细解答可以参考Stackoverflow. 具体做法我个人更倾向于cloudera的做法, 直接将yarn.nodemanager.vmem-check-enabled设置为false.","text":"在Hadoop2中经常会出现Container is running beyond virtual memory limits的错误, 详细解答可以参考Stackoverflow. 具体做法我个人更倾向于cloudera的做法, 直接将yarn.nodemanager.vmem-check-enabled设置为false. yarn-site.xml1234&lt;property&gt; &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt; &lt;value&gt;false&lt;/value&gt;&lt;/property&gt; 另外对mapreduce的配置, 如HDP在文章中用的Map task的container大小为4GB, Reduce task的container大小为8GB. cloudera建议这个比例为2/3.mapred-site.xml12345678&lt;property&gt; &lt;name&gt;mapreduce.map.memory.mb&lt;/name&gt; &lt;value&gt;4096&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;mapreduce.reduce.memory.mb&lt;/name&gt; &lt;value&gt;8192&lt;/value&gt;&lt;/property&gt;上述是container的使用的内存大小, 在实际使用时默认是把container内存的0.8分配给task JVM的堆. 当然这个也可以手动配置, 但其大小不能超过container的内存大小, 如下.mapred-site.xml12345678&lt;property&gt; &lt;name&gt;mapreduce.map.java.opts&lt;/name&gt; &lt;value&gt;-Xmx3072m&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;mapreduce.reduce.java.opts&lt;/name&gt; &lt;value&gt;-Xmx6144m&lt;/value&gt;&lt;/property&gt;","raw":null,"content":null,"categories":[],"tags":[{"name":"配置","slug":"配置","permalink":"http://yoursite.com/tags/配置/"},{"name":"bigdata","slug":"bigdata","permalink":"http://yoursite.com/tags/bigdata/"}]},{"title":"在JupyterHub中配置pyspark","slug":"在JupyterHub中配置pyspark","date":"2017-03-05T11:00:00.000Z","updated":"2017-12-03T09:05:54.000Z","comments":true,"path":"2017/03/05/在JupyterHub中配置pyspark/","link":"","permalink":"http://yoursite.com/2017/03/05/在JupyterHub中配置pyspark/","excerpt":"","text":"Spark是一个常用的大数据处理工具, Jupyter是一个notebook的工具, 在Jupyter中可以安装一些kernel进行交互式操作, 具体kernel的安装方法可以参考其官方文档. JupyterHub是一个Jupyter多租户的管理工具. 在本文中主要是介绍如何在Jupyter中配置一个pyspark核. 在图1.JupyterHub和pyspark的网络拓扑图中, JupyterHub作为spark任务的提交节点, spark01-spark04为一个简单的Spark集群. 图1. JupyterHub和pyspark的网络拓扑图假设在JupyterHub这个节点上已安装好JupyterHub, 其路径为/opt/jupyterhub. 在spark01-spark04这个四个节点上分别安装python, 假设其路径为/opt/python. 另外, 在JupyterHub和spark01-spark04这五个节点上的Spark安装路径为/opt/spark. 那么其对应的配置文件为:JupyterHub:/opt/jupyterhub/share/jupyter/kernels/pyspark/kernel.json12345678910111213141516171819// 连接YARN集群&#123; \"display_name\": \"pyspark\", \"language\": \"python\", \"argv\": [ \"/opt/python/bin/python\", \"-m\", \"ipykernel\", \"-f\", \"&#123;connect_file&#125;\" ], \"env\": &#123; \"PYSPARK_PYTHON\": \"/opt/python/bin/python\", \"SPARK_HOME\": \"/opt/spark/python\", \"PYTHONPATH\": \"/opt/spark/python/lib/py4j-0.9-src.zip:/opt/spark/python\", \"PYTHONSTARTUP\": \"/opt/spark/python/pyspark/shell.py\", \"PYSPARK_SUBMIT_ARGS\": \"--master yarn-client pyspark-shell\" &#125;&#125;如果使用的是Standalone方式, 则将第17行改为:“PYSPARK_SUBMIT_ARGS”: “–master spark://sparkMaster:7077 pyspark-shell”.","raw":null,"content":null,"categories":[],"tags":[{"name":"配置","slug":"配置","permalink":"http://yoursite.com/tags/配置/"},{"name":"bigdata","slug":"bigdata","permalink":"http://yoursite.com/tags/bigdata/"}]},{"title":"开篇","slug":"开篇","date":"2017-02-25T11:00:00.000Z","updated":"2017-02-27T12:59:26.000Z","comments":true,"path":"2017/02/25/开篇/","link":"","permalink":"http://yoursite.com/2017/02/25/开篇/","excerpt":"","text":"在2015年国庆节的时候就想搭一个博客, 一来用于记录自己的一些生活体会, 另一个主要用于对自己所学的东西做个笔记, 但是由于自己当时的懒惰, 再加之自己技术不成熟(主要还是自己懒惰)等一些原因一直未能完成. 当时我对Python比较熟悉, 但是想多扩大一下自己的眼界^_^, 不想用Pelican. 于是就尝试用Jekyll去搭建博客, 当时被各种模板主题之类的弄得晕头转向, 结果就一直拖着. 直到去年的时候又铆劲要搭博客, 当时觉得如果再用Jekyll就没有新鲜感了, 于是重新找新的生成器. 找来找去找了自己不熟悉的Hexo, 个中原因是被Hexo超快的生成速度所吸引(其实我也没看出来-_-). 当时也差点被Hexo的各种主题之类的弄晕, 最后还是决定先选一个主题搭起来再说. 一番艰难的抉择之后选定了Yilia, 主要是看见好几个博客用这个主题来介绍如何搭建博客的, 我想这个主题应该比较适合新手. 选好生成器和主题后, 几经折腾, 博客已初步搭建完成. 完成后这个博客将首先用来记录自己的一些成长(虽然自己已不年轻), 如生活体会, 一些技术总结之类的; 其次自己要努力做到每周都有内容更新. 从自己搭建博客这个过程, 自己也得到一个重要的教训: 有想法一定要行动起来, 不然始终只会是一个想法. 用古人的话来说就是: 道虽通不行不至, 事虽小不为不成.","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]}]}